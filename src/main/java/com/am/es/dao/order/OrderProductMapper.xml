<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.am.es.dao.order.OrderProductMapper">
    <resultMap id="BaseResultMap" type="com.am.es.entity.order.OrderProduct">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="product_no" property="productNo" jdbcType="VARCHAR"/>
        <result column="product_price" property="productPrice" jdbcType="DOUBLE"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="period" property="period" jdbcType="INTEGER"/>
        <result column="course_type" property="courseType" jdbcType="INTEGER"/>
        <result column="is_package" property="isPackage" jdbcType="INTEGER"/>
        <result column="create_id" property="createId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="flag" property="flag" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultVoMap" type="com.am.es.model.order.OrderProductVo">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
        <result column="product_no" property="productNo" jdbcType="VARCHAR"/>
        <result column="product_price" property="productPrice" jdbcType="DOUBLE"/>
        <result column="product_name" property="productName" jdbcType="VARCHAR"/>
        <result column="period" property="period" jdbcType="INTEGER"/>
        <result column="course_type" property="courseType" jdbcType="INTEGER"/>
        <result column="is_package" property="isPackage" jdbcType="INTEGER"/>
        <result column="create_id" property="createId" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="flag" property="flag" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, order_no, product_no, product_price, product_name, period, course_type, is_package, 
    create_id, create_time, flag
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.am.es.entity.order.OrderProductExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from order_product
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.am.es.entity.order.OrderProductExample">
        delete from order_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.am.es.entity.order.OrderProduct">
    insert into order_product (id, order_no, product_no, 
      product_price, product_name, period, 
      course_type, is_package, create_id, 
      create_time, flag)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR}, 
      #{productPrice,jdbcType=DOUBLE}, #{productName,jdbcType=VARCHAR}, #{period,jdbcType=INTEGER}, 
      #{courseType,jdbcType=INTEGER}, #{isPackage,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.am.es.entity.order.OrderProduct">
        insert into order_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="productNo != null">
                product_no,
            </if>
            <if test="productPrice != null">
                product_price,
            </if>
            <if test="productName != null">
                product_name,
            </if>
            <if test="period != null">
                period,
            </if>
            <if test="courseType != null">
                course_type,
            </if>
            <if test="isPackage != null">
                is_package,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="flag != null">
                flag,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="productNo != null">
                #{productNo,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                #{productPrice,jdbcType=DOUBLE},
            </if>
            <if test="productName != null">
                #{productName,jdbcType=VARCHAR},
            </if>
            <if test="period != null">
                #{period,jdbcType=INTEGER},
            </if>
            <if test="courseType != null">
                #{courseType,jdbcType=INTEGER},
            </if>
            <if test="isPackage != null">
                #{isPackage,jdbcType=INTEGER},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null">
                #{flag,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.am.es.entity.order.OrderProductExample"
            resultType="java.lang.Integer">
        select count(*) from order_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order_product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.orderNo != null">
                order_no = #{record.orderNo,jdbcType=VARCHAR},
            </if>
            <if test="record.productNo != null">
                product_no = #{record.productNo,jdbcType=VARCHAR},
            </if>
            <if test="record.productPrice != null">
                product_price = #{record.productPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.productName != null">
                product_name = #{record.productName,jdbcType=VARCHAR},
            </if>
            <if test="record.period != null">
                period = #{record.period,jdbcType=INTEGER},
            </if>
            <if test="record.courseType != null">
                course_type = #{record.courseType,jdbcType=INTEGER},
            </if>
            <if test="record.isPackage != null">
                is_package = #{record.isPackage,jdbcType=INTEGER},
            </if>
            <if test="record.createId != null">
                create_id = #{record.createId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.flag != null">
                flag = #{record.flag,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order_product
        set id = #{record.id,jdbcType=INTEGER},
        order_no = #{record.orderNo,jdbcType=VARCHAR},
        product_no = #{record.productNo,jdbcType=VARCHAR},
        product_price = #{record.productPrice,jdbcType=DOUBLE},
        product_name = #{record.productName,jdbcType=VARCHAR},
        period = #{record.period,jdbcType=INTEGER},
        course_type = #{record.courseType,jdbcType=INTEGER},
        is_package = #{record.isPackage,jdbcType=INTEGER},
        create_id = #{record.createId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        flag = #{record.flag,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.am.es.entity.order.OrderProduct">
        update order_product
        <set>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="productNo != null">
                product_no = #{productNo,jdbcType=VARCHAR},
            </if>
            <if test="productPrice != null">
                product_price = #{productPrice,jdbcType=DOUBLE},
            </if>
            <if test="productName != null">
                product_name = #{productName,jdbcType=VARCHAR},
            </if>
            <if test="period != null">
                period = #{period,jdbcType=INTEGER},
            </if>
            <if test="courseType != null">
                course_type = #{courseType,jdbcType=INTEGER},
            </if>
            <if test="isPackage != null">
                is_package = #{isPackage,jdbcType=INTEGER},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="flag != null">
                flag = #{flag,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.am.es.entity.order.OrderProduct">
    update order_product
    set order_no = #{orderNo,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_price = #{productPrice,jdbcType=DOUBLE},
      product_name = #{productName,jdbcType=VARCHAR},
      period = #{period,jdbcType=INTEGER},
      course_type = #{courseType,jdbcType=INTEGER},
      is_package = #{isPackage,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectListByPrimaryKeyList" parameterType="java.util.List"
            resultMap="BaseResultVoMap">
        SELECT * FROM order_product
        <where>
            id IN
            <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </where>
    </select>
</mapper>