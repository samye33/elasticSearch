<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.am.es.dao.order.OrderSerialMapper" >
  <resultMap id="BaseResultMap" type="com.am.es.entity.order.OrderSerial" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="cerial_no" property="cerialNo" jdbcType="VARCHAR" />
    <result column="pay_serial_no" property="paySerialNo" jdbcType="VARCHAR" />
    <result column="pay_amount" property="payAmount" jdbcType="DECIMAL" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
    <result column="pay_account" property="payAccount" jdbcType="VARCHAR" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
    <result column="receivable_account" property="receivableAccount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_no, cerial_no, pay_serial_no, pay_amount, pay_type, pay_account, pay_time, 
    remark, create_id, create_time, create_at, update_at, receivable_account
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.am.es.entity.order.OrderSerialExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_serial
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_serial
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_serial
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.am.es.entity.order.OrderSerialExample" >
    delete from order_serial
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.am.es.entity.order.OrderSerial" >
    insert into order_serial (id, order_no, cerial_no, 
      pay_serial_no, pay_amount, pay_type, 
      pay_account, pay_time, remark, 
      create_id, create_time, create_at, 
      update_at, receivable_account)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{cerialNo,jdbcType=VARCHAR}, 
      #{paySerialNo,jdbcType=VARCHAR}, #{payAmount,jdbcType=DECIMAL}, #{payType,jdbcType=INTEGER}, 
      #{payAccount,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{receivableAccount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.am.es.entity.order.OrderSerial" >
    insert into order_serial
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="cerialNo != null" >
        cerial_no,
      </if>
      <if test="paySerialNo != null" >
        pay_serial_no,
      </if>
      <if test="payAmount != null" >
        pay_amount,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payAccount != null" >
        pay_account,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="receivableAccount != null" >
        receivable_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="cerialNo != null" >
        #{cerialNo,jdbcType=VARCHAR},
      </if>
      <if test="paySerialNo != null" >
        #{paySerialNo,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payAccount != null" >
        #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="receivableAccount != null" >
        #{receivableAccount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.am.es.entity.order.OrderSerialExample" resultType="java.lang.Integer" >
    select count(*) from order_serial
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_serial
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null" >
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.cerialNo != null" >
        cerial_no = #{record.cerialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.paySerialNo != null" >
        pay_serial_no = #{record.paySerialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payAmount != null" >
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payType != null" >
        pay_type = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payAccount != null" >
        pay_account = #{record.payAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAt != null" >
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateAt != null" >
        update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receivableAccount != null" >
        receivable_account = #{record.receivableAccount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_serial
    set id = #{record.id,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      cerial_no = #{record.cerialNo,jdbcType=VARCHAR},
      pay_serial_no = #{record.paySerialNo,jdbcType=VARCHAR},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      pay_type = #{record.payType,jdbcType=INTEGER},
      pay_account = #{record.payAccount,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      receivable_account = #{record.receivableAccount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.am.es.entity.order.OrderSerial" >
    update order_serial
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="cerialNo != null" >
        cerial_no = #{cerialNo,jdbcType=VARCHAR},
      </if>
      <if test="paySerialNo != null" >
        pay_serial_no = #{paySerialNo,jdbcType=VARCHAR},
      </if>
      <if test="payAmount != null" >
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
      <if test="payAccount != null" >
        pay_account = #{payAccount,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="receivableAccount != null" >
        receivable_account = #{receivableAccount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.am.es.entity.order.OrderSerial" >
    update order_serial
    set order_no = #{orderNo,jdbcType=VARCHAR},
      cerial_no = #{cerialNo,jdbcType=VARCHAR},
      pay_serial_no = #{paySerialNo,jdbcType=VARCHAR},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      pay_type = #{payType,jdbcType=INTEGER},
      pay_account = #{payAccount,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      receivable_account = #{receivableAccount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectListByPrimaryKeyList" parameterType="java.util.List" resultType="com.am.es.model.order.OrderSerialVo">
    SELECT * FROM order_serial
    <where>
      id IN
      <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
        #{item}
      </foreach>
    </where>
  </select>
</mapper>