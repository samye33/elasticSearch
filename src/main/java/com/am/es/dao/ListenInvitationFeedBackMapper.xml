<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.am.es.dao.ListenInvitationFeedBackMapper" >
  <resultMap id="BaseResultMap" type="com.am.es.entity.ListenInvitationFeedBack" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="listen_invitation_id" property="listenInvitationId" jdbcType="INTEGER" />
    <result column="listen_invitation_no" property="listenInvitationNo" jdbcType="VARCHAR" />
    <result column="is_visit" property="isVisit" jdbcType="TINYINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="long_time" property="longTime" jdbcType="INTEGER" />
    <result column="student_feed_fack" property="studentFeedFack" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
    <result column="lesson_id" property="lessonId" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="lesson_url" property="lessonUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, listen_invitation_id, listen_invitation_no, is_visit, start_time, long_time, 
    student_feed_fack, create_time, create_by, class_id, teacher_id, lesson_id, note, 
    lesson_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.am.es.entity.ListenInvitationFeedBackExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from listen_invitation_feed_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from listen_invitation_feed_back
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from listen_invitation_feed_back
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.am.es.entity.ListenInvitationFeedBackExample" >
    delete from listen_invitation_feed_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.am.es.entity.ListenInvitationFeedBack" >
    insert into listen_invitation_feed_back (id, listen_invitation_id, listen_invitation_no, 
      is_visit, start_time, long_time, 
      student_feed_fack, create_time, create_by, 
      class_id, teacher_id, lesson_id, 
      note, lesson_url)
    values (#{id,jdbcType=INTEGER}, #{listenInvitationId,jdbcType=INTEGER}, #{listenInvitationNo,jdbcType=VARCHAR}, 
      #{isVisit,jdbcType=TINYINT}, #{startTime,jdbcType=TIMESTAMP}, #{longTime,jdbcType=INTEGER}, 
      #{studentFeedFack,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{teacherId,jdbcType=VARCHAR}, #{lessonId,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{lessonUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.am.es.entity.ListenInvitationFeedBack" >
    insert into listen_invitation_feed_back
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="listenInvitationId != null" >
        listen_invitation_id,
      </if>
      <if test="listenInvitationNo != null" >
        listen_invitation_no,
      </if>
      <if test="isVisit != null" >
        is_visit,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="longTime != null" >
        long_time,
      </if>
      <if test="studentFeedFack != null" >
        student_feed_fack,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="lessonId != null" >
        lesson_id,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="lessonUrl != null" >
        lesson_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="listenInvitationId != null" >
        #{listenInvitationId,jdbcType=INTEGER},
      </if>
      <if test="listenInvitationNo != null" >
        #{listenInvitationNo,jdbcType=VARCHAR},
      </if>
      <if test="isVisit != null" >
        #{isVisit,jdbcType=TINYINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="longTime != null" >
        #{longTime,jdbcType=INTEGER},
      </if>
      <if test="studentFeedFack != null" >
        #{studentFeedFack,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="lessonId != null" >
        #{lessonId,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="lessonUrl != null" >
        #{lessonUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.am.es.entity.ListenInvitationFeedBackExample" resultType="java.lang.Integer" >
    select count(*) from listen_invitation_feed_back
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update listen_invitation_feed_back
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.listenInvitationId != null" >
        listen_invitation_id = #{record.listenInvitationId,jdbcType=INTEGER},
      </if>
      <if test="record.listenInvitationNo != null" >
        listen_invitation_no = #{record.listenInvitationNo,jdbcType=VARCHAR},
      </if>
      <if test="record.isVisit != null" >
        is_visit = #{record.isVisit,jdbcType=TINYINT},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.longTime != null" >
        long_time = #{record.longTime,jdbcType=INTEGER},
      </if>
      <if test="record.studentFeedFack != null" >
        student_feed_fack = #{record.studentFeedFack,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.lessonId != null" >
        lesson_id = #{record.lessonId,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.lessonUrl != null" >
        lesson_url = #{record.lessonUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update listen_invitation_feed_back
    set id = #{record.id,jdbcType=INTEGER},
      listen_invitation_id = #{record.listenInvitationId,jdbcType=INTEGER},
      listen_invitation_no = #{record.listenInvitationNo,jdbcType=VARCHAR},
      is_visit = #{record.isVisit,jdbcType=TINYINT},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      long_time = #{record.longTime,jdbcType=INTEGER},
      student_feed_fack = #{record.studentFeedFack,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      lesson_id = #{record.lessonId,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      lesson_url = #{record.lessonUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.am.es.entity.ListenInvitationFeedBack" >
    update listen_invitation_feed_back
    <set >
      <if test="listenInvitationId != null" >
        listen_invitation_id = #{listenInvitationId,jdbcType=INTEGER},
      </if>
      <if test="listenInvitationNo != null" >
        listen_invitation_no = #{listenInvitationNo,jdbcType=VARCHAR},
      </if>
      <if test="isVisit != null" >
        is_visit = #{isVisit,jdbcType=TINYINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="longTime != null" >
        long_time = #{longTime,jdbcType=INTEGER},
      </if>
      <if test="studentFeedFack != null" >
        student_feed_fack = #{studentFeedFack,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="lessonId != null" >
        lesson_id = #{lessonId,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="lessonUrl != null" >
        lesson_url = #{lessonUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.am.es.entity.ListenInvitationFeedBack" >
    update listen_invitation_feed_back
    set listen_invitation_id = #{listenInvitationId,jdbcType=INTEGER},
      listen_invitation_no = #{listenInvitationNo,jdbcType=VARCHAR},
      is_visit = #{isVisit,jdbcType=TINYINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      long_time = #{longTime,jdbcType=INTEGER},
      student_feed_fack = #{studentFeedFack,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=VARCHAR},
      lesson_id = #{lessonId,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      lesson_url = #{lessonUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>