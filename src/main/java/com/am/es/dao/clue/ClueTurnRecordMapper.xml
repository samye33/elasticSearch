<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.am.es.dao.clue.ClueTurnRecordMapper" >
  <resultMap id="BaseResultMap" type="com.am.es.entity.clue.ClueTurnRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="custom_id" property="customId" jdbcType="INTEGER" />
    <result column="custom_no" property="customNo" jdbcType="VARCHAR" />
    <result column="clue_id" property="clueId" jdbcType="INTEGER" />
    <result column="clue_no" property="clueNo" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="pre_group_id" property="preGroupId" jdbcType="INTEGER" />
    <result column="pre_user_id" property="preUserId" jdbcType="INTEGER" />
    <result column="current_user_id" property="currentUserId" jdbcType="INTEGER" />
    <result column="current_group_id" property="currentGroupId" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="pre_clue_status" property="preClueStatus" jdbcType="VARCHAR" />
    <result column="current_clue_status" property="currentClueStatus" jdbcType="VARCHAR" />
    <result column="clue_turn_type" property="clueTurnType" jdbcType="INTEGER" />
    <result column="current_user_type" property="currentUserType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, custom_id, custom_no, clue_id, clue_no, memo, pre_group_id, pre_user_id, current_user_id, 
    current_group_id, create_by, create_time, update_by, update_time, pre_clue_status, 
    current_clue_status, clue_turn_type, current_user_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.am.es.entity.clue.ClueTurnRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from clue_turn_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from clue_turn_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from clue_turn_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.am.es.entity.clue.ClueTurnRecordExample" >
    delete from clue_turn_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.am.es.entity.clue.ClueTurnRecord" >
    insert into clue_turn_record (id, custom_id, custom_no, 
      clue_id, clue_no, memo, 
      pre_group_id, pre_user_id, current_user_id, 
      current_group_id, create_by, create_time, 
      update_by, update_time, pre_clue_status, 
      current_clue_status, clue_turn_type, current_user_type
      )
    values (#{id,jdbcType=INTEGER}, #{customId,jdbcType=INTEGER}, #{customNo,jdbcType=VARCHAR}, 
      #{clueId,jdbcType=INTEGER}, #{clueNo,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{preGroupId,jdbcType=INTEGER}, #{preUserId,jdbcType=INTEGER}, #{currentUserId,jdbcType=INTEGER}, 
      #{currentGroupId,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{preClueStatus,jdbcType=VARCHAR}, 
      #{currentClueStatus,jdbcType=VARCHAR}, #{clueTurnType,jdbcType=INTEGER}, #{currentUserType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.am.es.entity.clue.ClueTurnRecord" >
    insert into clue_turn_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customId != null" >
        custom_id,
      </if>
      <if test="customNo != null" >
        custom_no,
      </if>
      <if test="clueId != null" >
        clue_id,
      </if>
      <if test="clueNo != null" >
        clue_no,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="preGroupId != null" >
        pre_group_id,
      </if>
      <if test="preUserId != null" >
        pre_user_id,
      </if>
      <if test="currentUserId != null" >
        current_user_id,
      </if>
      <if test="currentGroupId != null" >
        current_group_id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="preClueStatus != null" >
        pre_clue_status,
      </if>
      <if test="currentClueStatus != null" >
        current_clue_status,
      </if>
      <if test="clueTurnType != null" >
        clue_turn_type,
      </if>
      <if test="currentUserType != null" >
        current_user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customId != null" >
        #{customId,jdbcType=INTEGER},
      </if>
      <if test="customNo != null" >
        #{customNo,jdbcType=VARCHAR},
      </if>
      <if test="clueId != null" >
        #{clueId,jdbcType=INTEGER},
      </if>
      <if test="clueNo != null" >
        #{clueNo,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="preGroupId != null" >
        #{preGroupId,jdbcType=INTEGER},
      </if>
      <if test="preUserId != null" >
        #{preUserId,jdbcType=INTEGER},
      </if>
      <if test="currentUserId != null" >
        #{currentUserId,jdbcType=INTEGER},
      </if>
      <if test="currentGroupId != null" >
        #{currentGroupId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preClueStatus != null" >
        #{preClueStatus,jdbcType=VARCHAR},
      </if>
      <if test="currentClueStatus != null" >
        #{currentClueStatus,jdbcType=VARCHAR},
      </if>
      <if test="clueTurnType != null" >
        #{clueTurnType,jdbcType=INTEGER},
      </if>
      <if test="currentUserType != null" >
        #{currentUserType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.am.es.entity.clue.ClueTurnRecordExample" resultType="java.lang.Integer" >
    select count(*) from clue_turn_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update clue_turn_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.customId != null" >
        custom_id = #{record.customId,jdbcType=INTEGER},
      </if>
      <if test="record.customNo != null" >
        custom_no = #{record.customNo,jdbcType=VARCHAR},
      </if>
      <if test="record.clueId != null" >
        clue_id = #{record.clueId,jdbcType=INTEGER},
      </if>
      <if test="record.clueNo != null" >
        clue_no = #{record.clueNo,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.preGroupId != null" >
        pre_group_id = #{record.preGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.preUserId != null" >
        pre_user_id = #{record.preUserId,jdbcType=INTEGER},
      </if>
      <if test="record.currentUserId != null" >
        current_user_id = #{record.currentUserId,jdbcType=INTEGER},
      </if>
      <if test="record.currentGroupId != null" >
        current_group_id = #{record.currentGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.preClueStatus != null" >
        pre_clue_status = #{record.preClueStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.currentClueStatus != null" >
        current_clue_status = #{record.currentClueStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.clueTurnType != null" >
        clue_turn_type = #{record.clueTurnType,jdbcType=INTEGER},
      </if>
      <if test="record.currentUserType != null" >
        current_user_type = #{record.currentUserType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update clue_turn_record
    set id = #{record.id,jdbcType=INTEGER},
      custom_id = #{record.customId,jdbcType=INTEGER},
      custom_no = #{record.customNo,jdbcType=VARCHAR},
      clue_id = #{record.clueId,jdbcType=INTEGER},
      clue_no = #{record.clueNo,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      pre_group_id = #{record.preGroupId,jdbcType=INTEGER},
      pre_user_id = #{record.preUserId,jdbcType=INTEGER},
      current_user_id = #{record.currentUserId,jdbcType=INTEGER},
      current_group_id = #{record.currentGroupId,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      pre_clue_status = #{record.preClueStatus,jdbcType=VARCHAR},
      current_clue_status = #{record.currentClueStatus,jdbcType=VARCHAR},
      clue_turn_type = #{record.clueTurnType,jdbcType=INTEGER},
      current_user_type = #{record.currentUserType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.am.es.entity.clue.ClueTurnRecord" >
    update clue_turn_record
    <set >
      <if test="customId != null" >
        custom_id = #{customId,jdbcType=INTEGER},
      </if>
      <if test="customNo != null" >
        custom_no = #{customNo,jdbcType=VARCHAR},
      </if>
      <if test="clueId != null" >
        clue_id = #{clueId,jdbcType=INTEGER},
      </if>
      <if test="clueNo != null" >
        clue_no = #{clueNo,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="preGroupId != null" >
        pre_group_id = #{preGroupId,jdbcType=INTEGER},
      </if>
      <if test="preUserId != null" >
        pre_user_id = #{preUserId,jdbcType=INTEGER},
      </if>
      <if test="currentUserId != null" >
        current_user_id = #{currentUserId,jdbcType=INTEGER},
      </if>
      <if test="currentGroupId != null" >
        current_group_id = #{currentGroupId,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="preClueStatus != null" >
        pre_clue_status = #{preClueStatus,jdbcType=VARCHAR},
      </if>
      <if test="currentClueStatus != null" >
        current_clue_status = #{currentClueStatus,jdbcType=VARCHAR},
      </if>
      <if test="clueTurnType != null" >
        clue_turn_type = #{clueTurnType,jdbcType=INTEGER},
      </if>
      <if test="currentUserType != null" >
        current_user_type = #{currentUserType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.am.es.entity.clue.ClueTurnRecord" >
    update clue_turn_record
    set custom_id = #{customId,jdbcType=INTEGER},
      custom_no = #{customNo,jdbcType=VARCHAR},
      clue_id = #{clueId,jdbcType=INTEGER},
      clue_no = #{clueNo,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      pre_group_id = #{preGroupId,jdbcType=INTEGER},
      pre_user_id = #{preUserId,jdbcType=INTEGER},
      current_user_id = #{currentUserId,jdbcType=INTEGER},
      current_group_id = #{currentGroupId,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pre_clue_status = #{preClueStatus,jdbcType=VARCHAR},
      current_clue_status = #{currentClueStatus,jdbcType=VARCHAR},
      clue_turn_type = #{clueTurnType,jdbcType=INTEGER},
      current_user_type = #{currentUserType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectListByPrimaryKeyList" parameterType="java.util.List" resultType="com.am.es.model.ClueTurnRecordVo">
    SELECT * FROM clue_turn_record
    <where>
      id IN
      <foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
        #{item}
      </foreach>
    </where>
  </select>
</mapper>